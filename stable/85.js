(this.webpackJsonp=this.webpackJsonp||[]).push([[85],{66:function(t,e,a){"use strict";a.r(e),e.default="//! This script simulates object-oriented programming (OOP) techniques using closures.\n\n// External variable that will be captured.\nlet last_value = ();\n\n// Define object\nlet obj1 = #{\n    _data: 42,                                  // data field\n    get_data: || this._data,                    // property getter\n    action: || print(`Data=${this._data}`),     // method\n    update: |x| {                               // property setter\n        this._data = x;\n        last_value = this._data;                // capture 'last_value'\n        this.action();\n    }\n};\n\nif obj1.get_data() > 0 {                        // property access\n    obj1.update(123);                           // call method\n} else {\n    print(\"we have a problem here\");\n}\n\n// Define another object based on the first object\nlet obj2 = #{\n    _data: 0,                                   // data field - new value\n    update: |x| {                               // property setter - another function\n        this._data = x * 2;\n        last_value = this._data;                // capture 'last_value'\n        this.action();\n    }\n};\nobj2.fill_with(obj1);                           // add all other fields from obj1\n\nif obj2.get_data() > 0 {                        // property access\n    print(\"we have another problem here\");\n} else {\n    obj2.update(42);                            // call method\n}\n\nprint(`Should be 84: ${last_value}`);\n"}}]);